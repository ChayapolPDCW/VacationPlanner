generator client {
  provider = "prisma-client-js"
  // output = "../src/generated/prisma_client"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String?
  googleId  String?  @unique 
  avatarUrl String   @default("public/images/avatar.png")
  experinceLevel Int @default(0)
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model TravelPlan {
  id Int @id @default(autoincrement())
  userId Int
  title String
  startDate DateTime
  endDate DateTime
  visibility Visibility @default(private)
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

enum Visibility {
  public
  private
}

model TravelPlanDestination {
  id Int @id @default(autoincrement())
  travelPlanId Int
  title String
  latitude Float
  longitude Float
  photoUrl String?
  startDate DateTime
  dailyVisitOrder Int
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model TravelPlanDestinationAttachment {
  travelPlanDestinationId Int
  url String
  order Int
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  @@id([travelPlanDestinationId])
}

model TravelPlanIdBookmark {
  travelPlanId Int
  userId Int


  @@id([travelPlanId, userId])
}

model TravelPlanLike {
  travelPlanId Int
  userId Int

  @@id([travelPlanId, userId])
}

model TravelPlanJournal {
  id Int @id @default(autoincrement())
  travelPlanId Int
  title String
  notes String
  mood String
  rating Int
  visibility Visibility @default(private)
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}
